name: Build and Push Image

on:
  release:
    types: [published]

env:
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: test-deploy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.event.release.tag_name }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Comment on release
      uses: actions/github-script@v7
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
      with:
        script: |
          // –°–æ–∑–¥–∞—ë–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ release —á–µ—Ä–µ–∑ issues API
          const release = ${{ github.event.release }};
          const commentBody = `üöÄ **Image built and pushed to ECR!**

**Image:** \`${process.env.ECR_REGISTRY}/${process.env.ECR_REPOSITORY}:${process.env.RELEASE_TAG}\`

### Next Steps
1. Create a new PR to update \`helm/go-app/values-dev.yaml\` or \`helm/go-app/values-prod.yaml\`
2. Change the image tag to: \`${process.env.RELEASE_TAG}\`
3. ArgoCD ApplicationSet will automatically sync the new version`;

          // –ü–æ–ª—É—á–∞–µ–º release notes –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
          const currentBody = release.body || '';
          const updatedBody = currentBody + '\n\n---\n\n' + commentBody;
          
          // –û–±–Ω–æ–≤–ª—è–µ–º release —Å –Ω–æ–≤—ã–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.id,
            body: updatedBody
          });

    - name: Notify completion
      run: |
        echo "üöÄ Image built and pushed to ECR!"
        echo "Image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.event.release.tag_name }}"
        echo "Tag: ${{ github.event.release.tag_name }}"
        echo "Next: Update helm/go-app/values-dev.yaml or helm/go-app/values-prod.yaml with this tag" 