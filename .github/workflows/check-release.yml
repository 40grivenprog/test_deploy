name: Check Version Label

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  check-version-label:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check for version labels
      id: check_labels
      run: |
        LABELS="${{ github.event.pull_request.labels.*.name }}"
        
        if [[ "$LABELS" == *"major"* ]] || [[ "$LABELS" == *"minor"* ]] || [[ "$LABELS" == *"patch"* ]]; then
          echo "has_version_label=true" >> $GITHUB_OUTPUT
          echo "✅ Version label found: $LABELS"
        else
          echo "has_version_label=false" >> $GITHUB_OUTPUT
          echo "❌ No version label found. Available labels: $LABELS"
        fi

    - name: Comment on PR - Missing Label
      if: steps.check_labels.outputs.has_version_label == 'false'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## 🚫 **Version Label Required**\n\n❌ **Missing version label**\n\nThis PR cannot be merged without a version label.\n\n### 📋 **Please add one of these labels:**\n\n- `patch` - for bug fixes (0.0.1 → 0.0.2)\n- `minor` - for new features (0.0.1 → 0.1.0)\n- `major` - for breaking changes (0.0.1 → 1.0.0)\n\n### 🔄 **What happens next:**\n\n1. ✅ Add version label\n2. 🔄 Draft release created automatically\n3. 🔄 Publish the release to build image\n4. 🔄 Update `helm/go-app/values.yaml` with new tag\n5. 🚀 Merge this PR'
          });

    - name: Comment on PR - Success
      if: steps.check_labels.outputs.has_version_label == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const labels = '${{ github.event.pull_request.labels.*.name }}';
          const versionLabel = labels.includes('major') ? 'major' : 
                              labels.includes('minor') ? 'minor' : 'patch';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '## ✅ **Version Label Check Passed**\n\n🎉 This PR is ready for the next step!\n\n**Version label:** `' + versionLabel + '`\n\n### 📋 **Next Steps:**\n\n1. ✅ Version label added (`' + versionLabel + '`)\n2. 🔄 Wait for draft release creation\n3. 🔄 Publish the draft release\n4. 🔄 Update `helm/go-app/values.yaml` with the new tag\n5. 🚀 Merge this PR\n\n### 📝 **Current labels:** ' + labels
          });

    - name: Fail if no version label
      if: steps.check_labels.outputs.has_version_label == 'false'
      run: |
        echo "❌ Version label check failed!"
        echo "Available labels: ${{ github.event.pull_request.labels.*.name }}"
        echo "Please add one of: major, minor, patch"
        exit 1 